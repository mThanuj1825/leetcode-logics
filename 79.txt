class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        def helper(i, j, idx, visited):
            if idx == len(word):
                return True
            
            if i < 0 or j < 0 or i >= len(board) or j >= len(board[0]) or visited[i][j] or board[i][j] != word[idx]:
                return False
            
            visited[i][j] = True
            
            if helper(i + 1, j, idx + 1, visited) or \
               helper(i - 1, j, idx + 1, visited) or \
               helper(i, j + 1, idx + 1, visited) or \
               helper(i, j - 1, idx + 1, visited):
                return True
            
            visited[i][j] = False
            
            return False
        
        rows, cols = len(board), len(board[0])
        visited = [[False] * cols for _ in range(rows)]
        
        for i in range(rows):
            for j in range(cols):
                if board[i][j] == word[0] and helper(i, j, 0, visited):
                    return True
                
        return False
